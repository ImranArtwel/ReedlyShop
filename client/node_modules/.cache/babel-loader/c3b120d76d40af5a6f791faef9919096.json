{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  // check if incoming item already exists\n  const existingItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } // return all cart items pluz new item with base quantity of 1\n\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  // check if incoming item already exists\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["C:/Private/ReedlyShop/client/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","existingCartItem","filter"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD;AACA,QAAMC,YAAY,GAAGF,SAAS,CAACG,IAAV,CACjBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADzB,CAArB;;AAGA,MAAGH,YAAH,EAAgB;AACb,WAAOF,SAAS,CACRM,GADD,CACKF,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACT,EAAC,GAAGD,QAAJ;AAAcG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA5C,KADS,GAETH,QAHR,CAAP;AAKF,GAXsD,CAavD;;;AACA,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,aAAJ;AAAmBM,IAAAA,QAAQ,EAAE;AAA7B,GAAf,CAAP;AACH,CAfM;AAiBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAC/D;AACA,QAAMC,gBAAgB,GAAGV,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EADxB,CAAzB;;AAGI,MAAGK,gBAAgB,CAACH,QAAjB,KAA8B,CAAjC,EAAoC;AAChC,WAAOP,SAAS,CAACW,MAAV,CACHP,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAD1C,CAAP;AAGH;;AAED,SAAOL,SAAS,CAACM,GAAV,CACHF,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACV,EAAC,GAAGD,QAAJ;AAAcG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA5C,GADU,GAEVH,QAHC,CAAP;AAKP,CAhBM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n    // check if incoming item already exists\r\n    const existingItem = cartItems.find(\r\n        cartItem => cartItem.id === cartItemToAdd.id);\r\n\r\n    if(existingItem){\r\n       return cartItems\r\n              .map(cartItem => cartItem.id === cartItemToAdd.id\r\n                    ? {...cartItem, quantity: cartItem.quantity + 1}\r\n                    : cartItem \r\n                 );\r\n    }\r\n       \r\n    // return all cart items pluz new item with base quantity of 1\r\n    return [...cartItems, {...cartItemToAdd, quantity: 1}]\r\n}\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n    // check if incoming item already exists\r\n    const existingCartItem = cartItems.find(\r\n        cartItem => cartItem.id === cartItemToRemove.id);\r\n    \r\n        if(existingCartItem.quantity === 1) {\r\n            return cartItems.filter(\r\n                cartItem => cartItem.id !== cartItemToRemove.id\r\n            );\r\n        }\r\n\r\n        return cartItems.map(\r\n            cartItem => cartItem.id === cartItemToRemove.id\r\n            ? {...cartItem, quantity: cartItem.quantity - 1 }\r\n            : cartItem\r\n        );\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}