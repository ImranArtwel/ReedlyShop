{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyAIzB5_lFQPIgWpAdk0Y8fkAlSIkgp91tI\",\n  authDomain: \"reedlyshop.firebaseapp.com\",\n  databaseURL: \"https://reedlyshop.firebaseio.com\",\n  projectId: \"reedlyshop\",\n  storageBucket: \"\",\n  messagingSenderId: \"456067450299\",\n  appId: \"1:456067450299:web:2ad3e0c5606021ed\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; // check if userAuth is set\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const userSnapShot = await userRef.get();\n\n  if (!userSnapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Private/ReedlyShop/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","userSnapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,4BAFC;AAGbC,EAAAA,WAAW,EAAE,mCAHA;AAIbC,EAAAA,SAAS,EAAE,YAJE;AAKbC,EAAAA,aAAa,EAAE,EALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe,OAD4D,CACpD;;AAEvB,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,YAAY,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAA3B;;AAEA,MAAI,CAACD,YAAY,CAACE,MAAlB,EAA0B;AACxB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACD;AACF;;AAED,SAAOZ,OAAP;AACD,CAvBM;AAwBP,OAAO,MAAMe,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACxE,QAAMC,aAAa,GAAGjB,SAAS,CAACkB,UAAV,CAAqBH,aAArB,CAAtB;AACA,QAAMI,KAAK,GAAGnB,SAAS,CAACmB,KAAV,EAAd;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAsBC,GAAD,IAAS;AAC5B,UAAMC,SAAS,GAAGL,aAAa,CAAChB,GAAd,EAAlB;AACAkB,IAAAA,KAAK,CAACT,GAAN,CAAUY,SAAV,EAAqBD,GAArB;AACD,GAHD;AAID,CAPM;AASPlC,QAAQ,CAACoC,aAAT,CAAuBnC,MAAvB;AAEA,OAAO,MAAMoC,IAAI,GAAGrC,QAAQ,CAACqC,IAAT,EAAb;AACP,OAAO,MAAMxB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMyB,QAAQ,GAAG,IAAItC,QAAQ,CAACqC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAetC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAIzB5_lFQPIgWpAdk0Y8fkAlSIkgp91tI\",\r\n  authDomain: \"reedlyshop.firebaseapp.com\",\r\n  databaseURL: \"https://reedlyshop.firebaseio.com\",\r\n  projectId: \"reedlyshop\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"456067450299\",\r\n  appId: \"1:456067450299:web:2ad3e0c5606021ed\",\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return; // check if userAuth is set\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const userSnapShot = await userRef.get();\r\n\r\n  if (!userSnapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error creating user\", error);\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n};\r\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\r\n  const collectionRef = firestore.collection(collectionKey);\r\n  const batch = firestore.batch();\r\n  objectsToAdd.forEach((obj) => {\r\n    const newDocRef = collectionRef.doc();\r\n    batch.set(newDocRef, obj);\r\n  });\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}